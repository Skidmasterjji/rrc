-- [[ Services & Vars ]] --
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- [[ Silent Aim Config ]] --
local SilentAim = {
    Enabled = true,
    HitPart = "Head",  
    
    FOV = {
        Visible = true,
        Transparency = 1,
        Thickness = 1,
        Radius = 150,
        Color = Color3.fromRGB(255, 0, 0)
    }
}

-- [[ Drawing ]] -- 
local FOVCircle = Drawing.new("Circle")
FOVCircle.Color = SilentAim.FOV.Color
FOVCircle.Thickness = SilentAim.FOV.Thickness
FOVCircle.Filled = false
FOVCircle.Transparency = SilentAim.FOV.Transparency
FOVCircle.Radius = SilentAim.FOV.Radius

-- [[ Gets Closest Player ]] -- 
local GetClosestPlayer = function()
    local ClosestDistance, ClosestPart = nil, nil
    local MousePosition = UserInputService:GetMouseLocation()

    for _, Player in next, Players:GetPlayers() do
        if Player ~= LocalPlayer and Player.Character then
            local Character = Player.Character
            local HitPart = Character:FindFirstChild(SilentAim.HitPart)
            local Humanoid = Character:FindFirstChild("Humanoid")

            if HitPart and Humanoid and Humanoid.Health > 0 then
                local ScreenPosition, Visible = Camera:WorldToScreenPoint(HitPart.Position)
                if Visible then
                    local Distance = (MousePosition - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude
                    if Distance <= SilentAim.FOV.Radius and (not ClosestDistance or Distance < ClosestDistance) then
                        ClosestDistance, ClosestPart = Distance, HitPart
                    end
                end
            end
        end
    end

    return ClosestPart
end

-- [[ The Silent Hook ]] --
local grm = getrawmetatable(game)
local index = grm.__index
setreadonly(grm, false)

grm.__index = function(self, Index)
    if not checkcaller() and self == Mouse and SilentAim.Enabled then
        if Index == "Hit" or Index == "Target" then
            local TargetPart = GetClosestPlayer()
            if TargetPart then
                return CFrame.new(TargetPart.Position)
            end
        end
    end
    return index(self, Index)
end

-- [[ Loop To Update Fov ]] --
RunService.RenderStepped:Connect(function()
    FOVCircle.Visible = SilentAim.FOV.Visible and SilentAim.Enabled
    FOVCircle.Position = UserInputService:GetMouseLocation()
    FOVCircle.Radius = SilentAim.FOV.Radius
end)
