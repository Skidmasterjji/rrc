-- // Silent Aim for Da Hood without hookmetamethod
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local SilentTarget = nil  -- The target to aim at

-- // Configuration
local Config = {
    Enabled = true,
    PredictionVelocity = 0.165,  -- Adjust prediction value to fine-tune accuracy
    Part = "Head",               -- Body part to aim at
    ClosestToCrosshair = true,   -- Find target closest to crosshair
    Humanize = true,             -- Add slight randomness to aiming for a more human feel
    HumanizeValue = Vector3.new(0.1, 0.1, 0.1)  -- Randomization values for humanizing aim
}

-- // Function to get the closest target to the crosshair
local function getClosestTarget()
    local closestTarget = nil
    local closestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(Config.Part) then
            local part = player.Character[Config.Part]
            local screenPoint, onScreen = workspace.CurrentCamera:WorldToViewportPoint(part.Position)
            local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude

            if onScreen and distance < closestDistance then
                closestDistance = distance
                closestTarget = player
            end
        end
    end

    return closestTarget
end

-- // Update Mouse.Hit to point towards the target's position
RunService.RenderStepped:Connect(function()
    if Config.Enabled then
        SilentTarget = getClosestTarget()

        if SilentTarget and SilentTarget.Character and SilentTarget.Character:FindFirstChild(Config.Part) then
            local targetPart = SilentTarget.Character[Config.Part]
            local targetPosition = targetPart.Position

            -- Predict movement by adding target velocity
            if SilentTarget.Character:FindFirstChild("HumanoidRootPart") then
                local velocity = SilentTarget.Character.HumanoidRootPart.Velocity
                targetPosition = targetPosition + (velocity * Config.PredictionVelocity)
            end

            -- Humanize aim with slight random offset if enabled
            if Config.Humanize then
                targetPosition = targetPosition + Vector3.new(
                    math.random() * Config.HumanizeValue.X - Config.HumanizeValue.X / 2,
                    math.random() * Config.HumanizeValue.Y - Config.HumanizeValue.Y / 2,
                    math.random() * Config.HumanizeValue.Z - Config.HumanizeValue.Z / 2
                )
            end

            -- Overwrite Mouse.Hit to point to the silent aim target
            Mouse.Hit = CFrame.new(targetPosition)
        end
    else
        SilentTarget = nil
    end
end)
